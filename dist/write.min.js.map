{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/write.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","write","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","scheduleFrame","frame","requestAnimationFrame","start","now","fn","batch","shift","interval","fps","value","fpsValue","clear","cancelAnimationFrame","push","index","indexOf","splice","performance","bind","Date"],"mappings":";CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,MAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,eCeA,SAAS0B,KACLC,EAAQC,sBAAsB,WAC1BD,EAAQ,IACR,IAAME,GAAQC,GACd,GAAG,CACC,GAAMC,GAAKC,EAAMC,OACbF,IACAA,UAECC,EAAMR,QAAYM,IAAQD,EAASK,EACxCF,GAAMR,QACNE,MAWZ,QAASS,GAAIC,GACTC,EAAWD,EACXF,EAAW,IAAOG,EAStB,QAASC,KACDX,GACAY,qBAAqBZ,GAEzBK,EAAMR,OAAS,EAWJ,QAASf,GAAMsB,GAM1B,MALIJ,IACAY,qBAAqBZ,GAEzBK,EAAMQ,KAAKT,GACXL,IACO,WACH,GAAMe,GAAQT,EAAMU,QAAQX,IACb,IAAXU,IAGJT,EAAMW,OAAOF,EAAO,GAChBd,IAAUK,EAAMR,QAChBe,qBAAqBZ,gEAbTlB,CA5DxB,IAAIkB,OAAA,GACAU,EAAW,GACXH,EAAW,IAAOG,EAChBL,KACAF,EAA6B,mBAAhBc,aAA8BA,YAAYd,IAAIe,KAAKD,aAAeE,KAAKhB,GA8E1FrB,GAAM0B,IAAMA,EACZ1B,EAAM6B,MAAQA","file":"write.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * Common variables\r\n */\r\nlet frame;\r\nlet fpsValue = 60;\r\nlet interval = 1000 / fpsValue;\r\nconst batch = [];\r\nconst now = typeof performance !== 'undefined' ? performance.now.bind(performance) : Date.now;\r\n\r\n/**\r\n * Schedule a frame to batch DOM\r\n * updates at the specified fps\r\n *\r\n * @api private\r\n */\r\nfunction scheduleFrame() {\r\n    frame = requestAnimationFrame(() => {\r\n        frame = null;\r\n        const start = now();\r\n        do {\r\n            const fn = batch.shift();\r\n            if (fn) {\r\n                fn();\r\n            }\r\n        } while (batch.length && ((now() - start) < interval));\r\n        if (batch.length) {\r\n            scheduleFrame();\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Set the frames-per-second\r\n *\r\n * @param {Number} value\r\n * @api public\r\n */\r\nfunction fps(value) {\r\n    fpsValue = value;\r\n    interval = 1000 / fpsValue;\r\n}\r\n\r\n/**\r\n * Cancel the frame if one has been\r\n * scheduled and empty the batch\r\n *\r\n * @api public\r\n */\r\nfunction clear() {\r\n    if (frame) {\r\n        cancelAnimationFrame(frame);\r\n    }\r\n    batch.length = 0;\r\n}\r\n\r\n/**\r\n * Use `requestAnimationFrame` to\r\n * batch DOM updates to boost\r\n * performance\r\n *\r\n * @param {Function} fn\r\n * @api public\r\n */\r\nexport default function write(fn) {\r\n    if (frame) {\r\n        cancelAnimationFrame(frame);\r\n    }\r\n    batch.push(fn);\r\n    scheduleFrame();\r\n    return function remove() {\r\n        const index = batch.indexOf(fn);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        batch.splice(index, 1);\r\n        if (frame && !batch.length) {\r\n            cancelAnimationFrame(frame);\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Add helper functions to the\r\n * `write` default export\r\n */\r\nwrite.fps = fps;\r\nwrite.clear = clear;\r\n"]}